app:
  PORT: 8080

simulation:
  time_step: 0.1                  # s
  max_steps: 1000
  speed: 1                        # Speed of simulation
  loop: false

environment:
  gravity: -9.81                  # m/s²
  air_density: 1.225              # kg/m³
  num_rockets: 2

landing:
  thresholds:
    safe:
      speed_vx: 30.0              # m/s
      speed_vy: 30.0              # m/s
      angle: 5.0                  # degrees
    good:
      speed_vx: 40.0              # m/s
      speed_vy: 40.0              # m/s
      angle: 8.0                  # degrees
    ok:
      speed_vx: 50.0              # m/s
      speed_vy: 50.0              # m/s
      angle: 10.0                 # degrees

rocket:
  thrust_power: 15000000          # N
  cold_gas_thrust_power: 70000    # N
  fuel_consumption_rate: 1700     # kg / (s * throttle)
  radius: 1.85                    # m
  reference_area: 10.8            # m²
  drag_coefficient: 0.8
  cold_gas_moment_arm: 1.85       # m
  angular_damping: 0.05

  position_limits:                # meters
    x: [-2000.0, 2000.0]
    y: [2000.0, 2300.0]
  velocity_limits:                # m/s
    vx: [-30.0, -10.0]
    vy: [-250.0, -230.0]
  acceleration_limits:            # m/s²
    ax: [-5, 5]
    ay: [-5, 5]
  attitude_limits:
    angle: [-15, 15]              # degrees
    angular_velocity: [-7.5, 7.5] # degrees/second
  mass_limits:
    dry_mass: [34000, 38000]      # kg (dry mass of the booster)
    fuel_mass: [370000, 410000]   # kg (initial fuel mass)

rl:
  rewards:
    landing: 1000.0               # Reward for perfect landing
    landing_success: 100.0        # Reward for successful landing
    crash: -500.0                 # Penalty for crashing
    crash_ground: -100.0          # Penalty for hitting ground too hard/wrong angle/off target
    crash_tipped_over: -100.0     # Penalty for tipping over mid-air
    out_of_bounds: -100.0         # Penalty for going out of bounds
    crash_out_of_bounds: -100.0   # Duplicate of out_of_bounds - consolidated

    time_penalty: -0.01           # Small penalty per step for efficiency

    distance_weight: 0.001        # Weight for distance-based potential
    angle_alignment_weight: 0.005 # Weight for angle-based potential
    velocity_alignment_weight: 0.002 # Weight for velocity-based potential
    stability: 0.2                # Weight for maintaining stability

    # Control penalties
    throttle_penalty_factor: 0.0  # Penalty for using main engine
    rcs_penalty_factor: 0.0       # Penalty for using cold gas thrusters

  training:
    total_timesteps: 1000000
    eval_episodes: 10
    save_interval: 50000
    log_interval: 1000

    algorithm:
      PPO:
        learning_rate: 0.0003
        batch_size: 64
        n_steps: 2048
        gamma: 0.99
        ent_coef: 0.01
        n_epochs: 10
        gae_lambda: 0.95
        max_grad_norm: 0.5
        clip_range: 0.2

      SAC:
        learning_rate: 0.0003
        batch_size: 256
        buffer_size: 1000000
        gamma: 0.99
        tau: 0.005
        ent_coef: "auto"
        target_update_interval: 1
        train_freq: 1
        gradient_steps: 1
        learning_starts: 10000

      TD3:
        learning_rate: 0.001
        batch_size: 100
        buffer_size: 1000000
        gamma: 0.99
        tau: 0.005
        policy_delay: 2
        target_policy_noise: 0.2
        noise_clip: 0.5
        train_freq: 1
        learning_starts: 10000
